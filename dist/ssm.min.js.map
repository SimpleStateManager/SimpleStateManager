{"version":3,"file":"ssm.min.js","sources":["../src/state.js","../src/utils.js","../src/ssm.js"],"sourcesContent":["function State(options) {\n    this.id = options.id || makeID();\n    this.query = options.query || 'all';\n    // These are exposed as part of the state, not options so delete before\n    // we merge these into default options.\n    delete options.id;\n    delete options.query;\n\n    var defaultOptions = {\n        onEnter: [],\n        onLeave: [],\n        onResize: [],\n        onFirstRun: []\n    };\n\n    //Merge options with defaults to make the state\n    this.options = mergeOptions(defaultOptions, options);\n\n    //Migrate methods into an array, this is to enable future functionality of adding extra methods to an existing state\n    if (typeof this.options.onEnter === \"function\") {\n        this.options.onEnter = [this.options.onEnter];\n    }\n\n    if (typeof this.options.onLeave === \"function\") {\n        this.options.onLeave = [this.options.onLeave];\n    }\n\n    if (typeof this.options.onResize === \"function\") {\n        this.options.onResize = [this.options.onResize];\n    }\n\n    if (typeof this.options.onFirstRun === \"function\") {\n        this.options.onFirstRun = [this.options.onFirstRun];\n    }\n\n    //Test the one time tests first, if the test is invalid we wont create the config option\n    if (this.testConfigOptions('once') === false) {\n        this.valid = false;\n        return false;\n    }\n\n    this.valid = true;\n    this.active = false;\n    this.init();\n}\n\nState.prototype = {\n    init: function init() {\n        this.test = window.matchMedia(this.query);\n\n        if (this.test.matches && this.testConfigOptions('match')) {\n            this.enterState();\n        }\n\n        this.listener = function (test) {\n            var changed = false;\n\n            if (test.matches) {\n                if (this.testConfigOptions('match')) {\n                    this.enterState();\n                    changed = true;\n                }\n            } else {\n                this.leaveState();\n                changed = true;\n            }\n\n            if (changed) {\n                stateChangeMethod();\n            }\n        }.bind(this);\n\n        this.test.addListener(this.listener);\n    },\n\n    //Handle entering a state\n    enterState: function enterState() {\n        fireAllMethodsInArray(this.options.onFirstRun);\n        fireAllMethodsInArray(this.options.onEnter);\n        this.options.onFirstRun = [];\n        this.active = true;\n    },\n\n    //Handle leaving a state\n    leaveState: function leaveState() {\n        fireAllMethodsInArray(this.options.onLeave);\n        this.active = false;\n    },\n\n    //Handle the user resizing the browser\n    resizeState: function resizeState() {\n        if (this.testConfigOptions('resize')) {\n            fireAllMethodsInArray(this.options.onResize);\n        }\n    },\n\n    //When the StateManager removes a state we want to remove the event listener\n    destroy: function destroy() {\n        this.test.removeListener(this.listener);\n    },\n\n    attachCallback: function attachCallback(type, callback, runIfActive) {\n        switch (type) {\n            case 'enter':\n                this.options.onEnter.push(callback);\n                break;\n            case 'leave':\n                this.options.onLeave.push(callback);\n                break;\n            case 'resize':\n                this.options.onResize.push(callback);\n                break;\n        }\n\n        if (type === 'enter' && runIfActive && this.active) {\n            callback();\n        }\n    },\n\n    testConfigOptions: function testConfigOptions(when) {\n        var totalConfigOptions = this.configOptions.length;\n\n        for (var j = 0; j < totalConfigOptions; j++) {\n            var configOption = this.configOptions[j];\n\n            if (typeof this.options[configOption.name] !== \"undefined\") {\n                if (configOption.when === when && configOption.test.bind(this)() === false) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    },\n\n    //An array of avaliable config options, this can be pushed to by the State Manager\n    configOptions: []\n};\n\nexport default State;","export function filterStates(states, key, value) {\n    var len = states.length;\n    var returnStates = [];\n\n    for (var i = 0; i < len; i++) {\n        var state = states[i];\n\n        if (state[key] && state[key] === value) {\n            returnStates.push(state);\n        }\n    }\n\n    return returnStates;\n}\n\nexport function mergeOptions(obj1, obj2) {\n    var obj3 = {};\n\n    for (var attrname in obj1) {\n        obj3[attrname] = obj1[attrname];\n    }\n\n    for (var attrname2 in obj2) {\n        obj3[attrname2] = obj2[attrname2];\n    }\n\n    return obj3;\n}\n\nexport function makeID() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 10; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nexport function fireAllMethodsInArray(arr) {\n    var arrLength = arr.length;\n\n    for (var i = 0; i < arrLength; i++) {\n        arr[i]();\n    }\n}\n\nexport function funcToArray(func) {\n    if (typeof func === 'function') {\n        return [func];\n    }\n    else {\n        return func;\n    }\n}\n\nexport function debounce(func, wait, immediate) {\n    var timeout;\n    \n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n}","import State from './state';\nimport {\n    debounce,\n    funcToArray,\n    fireAllMethodsInArray,\n    makeID,\n    mergeOptions,\n    filterStates,\n} from './utils';\n\nvar resizeTimeout = 25;\nvar stateChangeMethod = function(){};\n\nfunction Error(message) {\n    this.message = message;\n    this.name = \"Error\";\n}\n\n\n//State Manager Constructor\n\nfunction StateManager(options) {\n    this.states = [];\n    this.resizeTimer = null;\n    this.configOptions = [];\n\n    window.addEventListener(\"resize\", debounce(this.resizeBrowser.bind(this), resizeTimeout), true);    \n}\n\nStateManager.prototype = {\n    addState: function(options) {\n        var newState = new State(options);\n        \n        if (newState.valid) {\n            this.states.push(newState);\n        }\n\n        return newState;\n    },\n\n    addStates: function (statesArray) {\n        for (var i = statesArray.length - 1; i >= 0; i--) {\n            this.addState(statesArray[i]);\n        }\n\n        return this;\n    },\n\n    getState: function(id) {\n        for (var i = this.states.length - 1; i >= 0; i--) {\n            var state = this.states[i];\n\n            if(state.id === id){\n                return state;\n            }\n        }\n    },\n\n    isActive: function(id) {\n        var selectedState = this.getState(id) || {};\n\n        return selectedState.active || false;\n    },\n\n    getStates: function(idArr) {\n        var idCount = null, returnArr = [];\n\n        if (typeof(idArr) === \"undefined\") {\n            return this.states;\n        }\n        else {\n            idCount = idArr.length;\n            \n            for (var i = 0; i < idCount; i++) {\n                returnArr.push(this.getState(idArr[i]));\n            }\n\n            return returnArr;\n        }\n    },\n\n    removeState: function (id) {\n        for (var i = this.states.length - 1; i >= 0; i--) {\n            var state = this.states[i];\n\n            if (state.id === id) {\n                state.destroy();\n                this.states.splice(i, 1);\n            }\n        }\n\n        return this;\n    },\n\n    removeStates: function (idArray) {\n        for (var i = idArray.length - 1; i >= 0; i--) {\n            this.removeState(idArray[i]);\n        }\n\n        return this;\n    },\n\n    removeAllStates: function() {\n        for (var i = this.states.length - 1; i >= 0; i--) {\n            var state = this.states[i];\n            state.destroy();\n        }\n\n        this.states = [];\n    },\n\n\n    addConfigOption: function(options){\n        var defaultOptions = {\n            name: '', // name, this is used to apply to a state\n            test: null, //function which will perform the test\n            when: 'resize' // resize or match (match will mean that resize will never fire either), or once (which will test once, then delete state if test doesnt pass)\n        };\n\n        //Merge options with defaults\n        options = mergeOptions(defaultOptions, options);\n\n        if(options.name !== '' && options.test !== null){\n            State.prototype.configOptions.push(options);\n        }\n    },\n\n    removeConfigOption: function(name){\n        var configOptions = State.prototype.configOptions;\n\n        for (var i = configOptions.length - 1; i >= 0; i--) {\n            if (configOptions[i].name === name) {\n                configOptions.splice(i, 1);\n            }\n        }\n\n        State.prototype.configOptions = configOptions;\n    },\n\n    getConfigOption: function(name){\n        var configOptions = State.prototype.configOptions;\n\n        if(typeof name === \"string\"){\n            for (var i = configOptions.length - 1; i >= 0; i--) {\n                if(configOptions[i].name === name){\n                    return configOptions[i];\n                }\n            }\n        }\n        else{\n            return configOptions;\n        }\n    },\n\n    getConfigOptions: function(){\n        return State.prototype.configOptions;\n    },\n\n    resizeBrowser: function() {\n        var activeStates = filterStates(this.states, 'active', true);\n        var len = activeStates.length;\n\n        for (var i = 0; i < len; i++) {\n            activeStates[i].resizeState();\n        }\n    },\n\n    stateChange: function(func) {\n        if (typeof func === \"function\") {\n            stateChangeMethod = func;\n        }\n        else {\n            throw new Error('Not a function');\n        }\n    }\n};\n\nexport default new StateManager();\n"],"names":["State","options","id","makeID","query","defaultOptions","mergeOptions","onEnter","onLeave","onResize","onFirstRun","testConfigOptions","valid","active","init","prototype","test","window","matchMedia","matches","enterState","listener","changed","leaveState","bind","addListener","resizeState","destroy","removeListener","attachCallback","type","callback","runIfActive","push","when","totalConfigOptions","configOptions","length","j","configOption","name","filterStates","states","key","value","len","returnStates","i","state","obj1","obj2","obj3","attrname","attrname2","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","setTimeout","resizeTimeout","Error","message","StateManager","resizeTimer","addEventListener","resizeBrowser","newState","statesArray","addState","selectedState","getState","idArr","idCount","returnArr","splice","idArray","removeState","activeStates"],"mappings":"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"}